@mixin input-text($important: null) {
  @include body($important);
}

@mixin input-label($important: null) {}

@mixin input-field($important: null) {
  width: 100% $important;
  padding-top: $spacing $important;
  padding-bottom: $spacing $important;
  padding-left: $spacing*2 $important;
  padding-right: $spacing*2 $important;
  background-color: $transparent $important;
  border: 2px solid var(--border, $black) $important;
  color: $black $important;
  outline: none $important;
  @include input-text($important);
  
  &::placeholder {
    color: $black $important;
    transition: color .5s ease;
  }
  
  &:focus {

    &::placeholder {
      color: $transparent $important;
    }
  }

  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px $white inset !important;
    -webkit-text-fill-color: $black !important;
  }

  &::selection {
    background: $black;
  }
  
  &.error {
    border-color: $error $important;
  }
}

@mixin input-number($important: null) {
  position: relative $important;
  width: 100% $important;
  min-height: 40px $important;
  // max-width: 55px $important;
  padding-top: $spacing $important;
  padding-bottom: $spacing $important;
  padding-right: $spacing*1.5;
  text-align: center $important;
  border: 2px solid $black $important;
  background-color: $transparent $important;
  color: $black $important;
  @include body($important);

  &::placeholder {
    color: $black-transparent $important;
  }

  &::-webkit-inner-spin-button,
  &::-webkit-outer-spin-button {
    position: absolute $important;
    top: 0 $important;
    right: 0 $important;
    bottom: 0 $important;
    width: 15px $important;
    background: currentColor $important;
    appearance: none $important;
    opacity: 0.5 $important;
    @include mask('icon-arrows.svg', calc(100% - #{$spacing/2}), 0% 50%);
  }
}

@mixin input-textarea($important: null) {
  width: 100% $important;
  max-height: 200px $important;
  padding-top: $spacing $important;
  padding-bottom: $spacing $important;
  padding-left: $spacing*2 $important;
  padding-right: $spacing*2 $important;
  background-color: $white $important;
  border: 2px solid var(--border, $black) $important;
  color: $black $important;
  outline: none $important;
  @include input-text($important);
  resize: none;
  
  &::placeholder {
    color: $black-contrast $important;
    transition: color .5s ease;
  }
  
  &:focus {

    &::placeholder {
      color: $transparent $important;
    }
  }

  &:-webkit-autofill,
  &:-webkit-autofill:hover,
  &:-webkit-autofill:focus,
  &:-webkit-autofill:active {
    -webkit-box-shadow: 0 0 0 30px $white inset !important;
    -webkit-text-fill-color: $black !important;
  }

  &::selection {
    background: $black;
  }
  
  &.error {
    border-color: $error $important;
  }
}

@mixin input-checkbox($important: null) {
  position: relative $important;
  display: inline-block $important;
  vertical-align: middle $important;
  width: 18px $important;
  height: 18px $important;
  margin-right: $spacing/2 $important;
  border: 2px solid var(--border, $black) $important;
  cursor: pointer $important;
  transition: border-color .3s ease $important;

  &:after,
  &:before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    background-color: currentColor;
    transition: transform .2s ease;
  }

  &:after {
    height: 75%;
    width: 2px;
    transform-origin: bottom;
    transform: translate3d(-2px, -6px, 0) rotate(35deg) scaleY(0);
  }
  
  &:before {
    height: 35%;
    width: 2px;
    transform-origin: top;
    transform: translate3d(-4px, 0, 0) rotate(-32deg) scaleY(0);
    transition-delay: .2s;
  }

  + label {
    display: inline-block;
    vertical-align: middle;
    margin-top: 2px;
    @include input-text;
    color: $black-contrast;
    cursor: pointer $important;
    transition: color .3s ease;
  }

  &:focus {

    + label {
      color: $black;
    }
  }
  
  &:checked {

    &:after {
      transform: translate3d(-2px, -6px, 0) rotate(35deg) scaleY(1);
      transition-delay: .2s;
    }
    
    &:before {
      transform: translate3d(-4px, 0, 0) rotate(-32deg) scaleY(1);
      transition-delay: 0s;
    }
  
    + label {
      color: $black;
    }
  }
}

@mixin input-radio($important: null) {
  position: relative $important;
  display: inline-block $important;
  vertical-align: middle $important;
  width: 18px $important;
  height: 18px $important;
  margin-right: $spacing/2 $important;
  border: 2px solid currentColor $important;
  border-radius: 100px;
  cursor: pointer $important;

  &:after {
    content:'';
    @include center;
    height: 8px;
    width: 8px;
    margin: 0;
    background-color: currentColor;
    border-radius: 100px;
    @include hide;
    transition: visibility .3s ease, opacity .3s ease;
  }

  &:focus {
    border-color: red $important;
  }

  &:checked {
    &:after {
      @include show;
    }
  }

  + label {
    display: inline-block;
    vertical-align: middle;
  }
}

@mixin input-select($important: null) {
  @include input-field($important);
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 320 192"><polygon points="19.4 0 0 20.7 160 192 320 20.7 300.7 0 160 150.5 19.4 0" fill="%23#{str-slice(#{$black}, 2)}"/></svg>') $important;
  background-repeat: no-repeat $important;
  background-position: calc(100% - 15px) calc(50% + 2px) $important;
  background-size: 13px 13px $important;
}

.input {
  $self: &;
  position: relative;

  &-label {
    @include input-label;
  }

  &-field {
    @include input-field;
  }

  &-number {
    @include input-number;
  }

  &-textarea {
    // @include input-textarea;
  }

  &-select {
    @include input-select;
  }

  &-checkbox {
    // @include input-checkbox;
  }

  &-radio {
    // @include input-radio;
  }

  &-alert {

    &.error {
      color: $error;
    }
  }
}